<?phpnamespace Loytor\Wxhelper\Api;use Loytor\Wxhelper\Utils\Http;class Component extends ApiAbstract{    const URL_CREATE_PREAUTHCODE = 'https://api.weixin.qq.com/cgi-bin/component/api_create_preauthcode';    const URL_QUERY_AUTH = 'https://api.weixin.qq.com/cgi-bin/component/api_query_auth';    const URL_AUTHORIZER_TOKEN = 'https://api.weixin.qq.com/cgi-bin/component/api_authorizer_token';    const URL_GET_AUTHORIZER_INFO = 'https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_info';    const URL_GET_AUTHORIZER_OPTION = 'https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_option';    const URL_SET_AUTHORIZER_OPTION = 'https://api.weixin.qq.com/cgi-bin/component/api_set_authorizer_option';    const URL_JSCODE2SESSION = 'https://api.weixin.qq.com/sns/component/jscode2session';    const URL_OAUTH2_ACCESS_TOKEN = 'https://api.weixin.qq.com/sns/oauth2/component/access_token';    /**     * 创建预授权码     */    public function createPreauthcode()    {        $result = Http::request('POST', self::URL_CREATE_PREAUTHCODE)->withComponentAccessToken($this->access_token)->withBody([            'component_appid' => $this->appid        ])->send();        if (isset($result['pre_auth_code'])) {            return $result['pre_auth_code'];        } else {            $this->setErrorMsg($result);            return null;        }    }    /**     * 使用授权码换取公众号的授权信息     * @param String $authorization_code 授权码     * @return mixed 公众账号授权信息:     * {     *  "authorization_info":{     *      "authorizer_appid": "授权公众账号的APPID(wxf8b4f85f3a794e77)",     *      "authorizer_access_token": "授权的accesstoken",     *      "expires_in": 7200,     *      "authorizer_refresh_token": "用来刷新获取accesstoken的刷新令牌",     *      "func_info": [{     *          "funcscope_category": {     *              "id": 1     *          }     *      ]     * }     * }     */    public function queryAuth($authorization_code)    {        $result = Http::request('POST', self::URL_QUERY_AUTH)->withComponentAccessToken($this->access_token)->withBody([            'component_appid' => $this->appid,            'authorization_code' => $authorization_code        ])->send();        if (isset($result['errcode'])) {            $this->setErrorMsg($result);            return null;        } else {            return $result;        }    }    /**     * 使用刷新令牌获取（刷新）授权公众号的令牌     * @param String $authorizer_appid 微信公众平台的APPID     * @param String $authorizer_refresh_token 刷新令牌     * @return mixed|null|string     */    public function refreshAuthorizerToken($authorizer_appid, $authorizer_refresh_token)    {        $result = Http::request('POST', self::URL_AUTHORIZER_TOKEN)->withComponentAccessToken($this->access_token)->withBody([            'component_appid' => $this->appid,            'authorizer_appid' => $authorizer_appid,            'authorizer_refresh_token' => $authorizer_refresh_token        ])->send();        if (isset($result['errcode'])) {            $this->setErrorMsg($result);            return null;        } else {            return $result;        }    }    /**     * 获取授权方的账户信息     * @param String $authorizer_appid 微信公众平台的APPID     * @return mixed|null|string     */    public function getAuthorizerInfo($authorizer_appid)    {        $result = Http::request('POST', self::URL_GET_AUTHORIZER_INFO)->withComponentAccessToken($this->access_token)->withBody([            'component_appid' => $this->appid,            'authorizer_appid' => $authorizer_appid        ])->send();        if (isset($result['errcode'])) {            $this->setErrorMsg($result);            return null;        } else {            return $result;        }    }    /**     * 获取授权方的选项设置信息     * @param String $authorizer_appid 微信公众平台的APPID     * @param String $option_name 选项配置名称     * @return mixed|null|string     */    public function getAuthorizerOption($authorizer_appid, $option_name)    {        $result = Http::request('POST', self::URL_GET_AUTHORIZER_OPTION)->withComponentAccessToken($this->access_token)->withBody([            'component_appid' => $this->appid,            'authorizer_appid' => $authorizer_appid,            'option_name' => $option_name        ])->send();        if (isset($result['errcode'])) {            $this->setErrorMsg($result);            return null;        } else {            return $result;        }    }    /**     * 设置授权方的选项信息     */    public function setAuthorizerOption($authorizer_appid, $option_name, $option_value)    {        $result = Http::request('POST', self::URL_SET_AUTHORIZER_OPTION)->withComponentAccessToken($this->access_token)->withBody([            'component_appid' => $this->appid,            'authorizer_appid' => $authorizer_appid,            'option_name' => $option_name,            'option_value' => $option_value        ])->send();        if (isset($result['errcode']) && $result['errcode'] === 0) {            $this->setErrorMsg($result);            return true;        } else {            return false;        }    }    /**     * 通过js_code 换取sesskey和openid     * https://api.weixin.qq.com/sns/component/jscode2session?appid=APPID&js_code=JSCODE&grant_type=authorization_code&component_appid=COMPONENT_APPID&component_access_token=ACCESS_TOKEN     *     * @param $wx_appid     * @param $js_code     *     * @return     *  [     *      "openid":“OPENID”,     *      "session_key":"SESSIONKEY"     *  ]     */    public function getWxappOpenidSessionKey($authorizer_appid = "", $js_code = "")    {        $result = Http::request('GET', self::URL_JSCODE2SESSION)->withQuery([            'appid' => $authorizer_appid,            'js_code' => $js_code,            'grant_type' => 'authorization_code',            'component_appid' => $this->appid,            'component_access_token' => $this->access_token,        ])->send();        if (isset($result['openid']) && isset($result['session_key'])) {            return $result;        } else {            $this->setErrorMsg($result);            return null;        }    }    /**     * 通过网页鉴权的 code 换取网页鉴权 access_token等相关信息     *     * @param string $authorizer_appid     * @param string $code     * @return array|null|string     */    public function getOauth2AccessToken($authorizer_appid = '', $code = '')    {        $result = Http::request('GET', self::URL_OAUTH2_ACCESS_TOKEN)->withQuery([            'appid' => $authorizer_appid,            'code' => $code,            'grant_type' => 'authorization_code',            'component_appid' => $this->appid,            'component_access_token' => $this->access_token,        ])->send();        if (isset($result['errcode'])) {            $this->setErrorMsg($result);            return null;        } else {            return $result;        }    }}